# Azure DevOps pipeline for automating the copy of the metadata and other assets 
# contained in this repository into the Storage account used by the CDN.
#
# The following parameter needs to be set to identify the environment for which
# should be synchronized the content with the master branch of this repository:
# - ENVIRONMENT: TEST | PRODUCTION
#
# The following pipeline variables have to be added and configured based on the
# environment:
# - PRODUCTION_AZURE_SUBSCRIPTION: service connection name
# - PRODUCTION_STORAGE_ACCOUNT_NAME: storage account name
#
# - TEST_AZURE_SUBSCRIPTION: service connection name for test only
# - TEST_STORAGE_ACCOUNT_NAME: storage account name for test only

parameters:
  - name: 'ENVIRONMENT'
    displayName: 'Select the environment:'
    type: string
    default: TEST
    values:
      - TEST  
      - PRODUCTION

variables:
  - name: SELECTED_ENV
    value: ${{ parameters.ENVIRONMENT }}
  - name: BLOB_CONTAINER_NAME
    value: '$web'

# Use Windows VM because the AzureFileCopy task is supported only on that OS
pool:
  vmImage: 'windows-2019'

# No trigger for this pipeline
trigger: none

jobs:
  - job: publish_assets 
    steps:  
      # 1. Publish GitHub content in PRODUCTION env 
      # Uploading files from source path: 'D:\a\1\s\*' to storage account: 'myioslotstorageaccount2' in container: '$web'
      # The copying is done from the root folder of the GitHub repository to the given 
      #Â container blob in the specified storage account
      #  $(System.DefaultWorkingDirectory)/dist/*
      - task: AzureFileCopy@4
        inputs:
          SourcePath: '$(System.DefaultWorkingDirectory)/*'
          azureSubscription: '$(PRODUCTION_AZURE_SUBSCRIPTION)'
          Destination: 'AzureBlob'
          storage: '$(PRODUCTION_STORAGE_ACCOUNT_NAME)'
          ContainerName: '$(BLOB_CONTAINER_NAME)'
          AdditionalArgumentsForBlobCopy: '--recursive --exclude-path "README.md;CODEOWNERS;yarn.lock;azure-pipelines.yml"'
        displayName: Deploy to container blob      

