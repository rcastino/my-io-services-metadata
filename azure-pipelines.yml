# Azure DevOps pipeline for uploading files from this repository to a container 
# on Azure storage account that is served up via the static website support and 
# fronted via an Azure CDN. 
# 
# WARNING. The current implementation is based on DevOps AzureFileCopy task that  
# copies the new files up to Azure Storage overwriting the existing ones but never 
# removes the old files.
# In most scenarios, this is not a problem and avoid to remove assets that could be
# still requested by old client versions (e.g. mobile apps). By the way, in the
# future we could add the option to copy out the new files, update existing files 
# and remove the ones that no longer exist (using AzCopy sync command). 
#
# The following parameters needs to be set to identify the environment for which
# should be synchronized the content with the master branch of this repository:
# - ENVIRONMENT: TEST | PRODUCTION
#
# The following pipeline variables have to be added and configured based on the
# environment:
# - PRODUCTION_AZURE_SUBSCRIPTION: service connection name
# - PRODUCTION_STORAGE_ACCOUNT_NAME: storage account name
#
# - TEST_AZURE_SUBSCRIPTION: service connection name for test only
# - TEST_STORAGE_ACCOUNT_NAME: storage account name for test only

parameters:
  - name: 'TEST_ENABLE_DEPLOY'
    displayName: 'Copy files on test environment'
    type: boolean
    default: false

  - name: 'PRODUCTION_ENABLE_DEPLOY'
    displayName: 'Copy files in produstion environment'
    type: boolean
    default: true

variables:
  - name: BLOB_CONTAINER_NAME
    value: '$web'

# Use Windows VM because the AzureFileCopy task is supported only on that OS
pool:
  vmImage: 'windows-2019'

# No trigger for this pipeline
trigger: none

jobs:
  - ${{ if eq(parameters.PRODUCTION_ENABLE_DEPLOY, true) }}:
    - job: publish_assets_prod
      steps:  
        - task: AzureFileCopy@4
          inputs:
            SourcePath: '$(System.DefaultWorkingDirectory)/*'
            azureSubscription: '$(PRODUCTION_AZURE_SUBSCRIPTION)'
            Destination: 'AzureBlob'
            storage: '$(PRODUCTION_STORAGE_ACCOUNT_NAME)'
            ContainerName: '$(BLOB_CONTAINER_NAME)'
            AdditionalArgumentsForBlobCopy: '--recursive --exclude-path "README.md;CODEOWNERS;yarn.lock;package.json;azure-pipelines.yml;definitions;src" --exclude-pattern ".*"'
          displayName: Copy to container blob (prod)

  - ${{ if eq(parameters.TEST_ENABLE_DEPLOY, true) }}:
    - job: publish_assets_test
      steps:  
        - task: AzureFileCopy@4
          inputs:
            SourcePath: '$(System.DefaultWorkingDirectory)/*'
            azureSubscription: '$(TEST_AZURE_SUBSCRIPTION)'
            Destination: 'AzureBlob'
            storage: '$(TEST_STORAGE_ACCOUNT_NAME)'
            ContainerName: '$(BLOB_CONTAINER_NAME)'
            AdditionalArgumentsForBlobCopy: '--recursive --exclude-path "README.md;CODEOWNERS;yarn.lock;package.json;azure-pipelines.yml;definitions;src" --exclude-pattern ".*"'
          displayName: Copy to container blob (test)
