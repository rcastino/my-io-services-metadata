# Azure DevOps pipeline for automating the copy of the metadata and other assets 
# contained in this repository into the Storage account used by the CDN.
#
# The following parameter needs to be set to identify the environment for which
# should be synchronized the content with the master branch of this repository:
# - ENVIRONMENT: TEST | PRODUCTION
#
# The following pipeline variables have to be added and configured based on the
# environment:
# - PRODUCTION_AZURE_SUBSCRIPTION: service connection name
# - TEST_AZURE_SUBSCRIPTION: service connection name for test only
#

parameters:
  - name: 'ENVIRONMENT'
    displayName: 'Select the environment:'
    type: string
    default: TEST
    values:
      - TEST  
      - PRODUCTION

variables:
  - name: SELECTED_ENV
    value: ${{ parameters.ENVIRONMENT }}

# Linux based agent is faster
pool:
  vmImage: 'ubuntu-latest'

# No trigger for this pipeline
trigger: none

jobs:
  - job: publish_assets 
    steps:
      # 1. Set the number of the build
      - task: PowerShell@2
        displayName: Update Build Number
        inputs:
          targetType: 'inline'
          script: '$id = "$(Build.BuildId)"; $date = Get-Date -Format "yyyy.MMdd"; Write-Host "##vso[build.updatebuildnumber]$date.$id"'

      # 2. Install the Az PowerShell modules our script will need (Az.Accounts, Az.KeyVault, Az.Resources)
      - task: PowerShell@2
        displayName: Install Az Modules
        inputs:
          targetType: 'inline'
          script: 'Install-Module Az.Accounts, Az.KeyVault, Az.Resources -Force'
          errorActionPreference: 'stop'
          failOnStderr: true
          pwsh: true

      # Publish GitHub content in PRODUCTION env
      - task: AzurePowerShell@4
        displayName: 'PROD - Order or Renew Certificate'
        condition: and(succeeded(), eq(variables['RENEW_CERT_ENV'], 'PRODUCTION'))
        inputs:
          azureSubscription: '$(PRODUCTION_AZURE_SUBSCRIPTION)'
          scriptType: 'FilePath'
          scriptPath: 'New-AcmeCertificate.ps1 '
          scriptArguments: '-AcmeDirectory "$(PRODUCTION_AcmeDirectory)" -AcmeContact "$(PRODUCTION_AcmeContact)" -CertificateNames "$(PRODUCTION_CertificateNames)" -KeyVaultResourceId "$(PRODUCTION_KeyVaultResourceId)" -ForceRenewal "${{ parameters.FORCE }}"'
          errorActionPreference: 'stop'
          failOnStandardError: true
          azurePowerShellVersion: 'LatestVersion'
        env:
          PSModulePath: $(PSModulePath)

